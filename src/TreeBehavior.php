<?php
/**
 * Created by PhpStorm.
 * User: wodrow
 * Date: 19-1-18
 * Time: 下午4:41
 */

namespace wodrow\yii2wwtree;


use yii\helpers\Url;
use yii\base\Behavior;
use yii\web\ForbiddenHttpException;

class TreeBehavior extends Behavior
{
    public function attach($owner)
    {
        parent::attach($owner); // TODO: Change the autogenerated stub
    }

    public function getCanAddChild()
    {
        if ($this->owner->isNewRecord){
            return 0;
        }else{
            return 1;
        }
    }

    public function getCanDelete()
    {
        if ($this->owner->isNewRecord){
            return 0;
        }else{
            return 1;
        }
    }

    public function getCanUp()
    {
        $owner = $this->owner;
        if ($owner->isNewRecord){
            return 0;
        }else{
            if ($owner::find()->where(['pid' => $owner->pid])->andWhere(['<', 'sort', $owner->sort])->one()){
                return 1;
            }else{
                return 0;
            }
        }
    }

    public function sortUp()
    {
        $owner = $this->owner;
        if (!$owner->canUp){
            throw new ForbiddenHttpException(\Yii::t('app', "不能上移"));
        }else{
            $up = $owner::find()->where(['pid' => $owner->pid])->andWhere(['<', 'sort', $owner->sort])->orderBy(['sort' => SORT_DESC])->one();
            $tmp = $up->sort;
            $up->sort = $owner->sort;
            $owner->sort = $tmp;
            $up->save();
            $owner->save();
            \Yii::$app->session->addFlash("success", \Yii::t('app', "上移成功"));
            $url = Url::to(['/'.\Yii::$app->controller->route, 'id' => $owner->id]);
            \Yii::$app->response->redirect($url)->send();
            exit;
        }
    }

    public function getCanDown()
    {
        $owner = $this->owner;
        if ($owner->isNewRecord){
            return 0;
        }else{
            if ($owner::find()->where(['pid' => $owner->pid])->andWhere(['>', 'sort', $owner->sort])->one()){
                return 1;
            }else{
                return 0;
            }
        }
    }

    public function sortDown()
    {
        $owner = $this->owner;
        if (!$owner->canDown){
            throw new ForbiddenHttpException(\Yii::t('app', "不能下移"));
        }else{
            $down = $owner::find()->where(['pid' => $owner->pid])->andWhere(['>', 'sort', $owner->sort])->orderBy(['sort' => SORT_ASC])->one();
            $tmp = $down->sort;
            $down->sort = $owner->sort;
            $owner->sort = $tmp;
            $down->save();
            $owner->save();
            \Yii::$app->session->addFlash("success", \Yii::t('app', "下移成功"));
            $url = Url::to(['/'.\Yii::$app->controller->route, 'id' => $owner->id]);
            \Yii::$app->response->redirect($url)->send();
            exit;
        }
    }

    public function getCanLeft()
    {
        $owner = $this->owner;
        if ($owner->isNewRecord){
            return 0;
        }else{
            if ($owner::find()->where(['id' => $owner->pid])->one()){
                return 1;
            }else{
                return 0;
            }
        }
    }

    public function sortLeft()
    {
        $owner = $this->owner;
        if (!$owner->canLeft){
            throw new ForbiddenHttpException(\Yii::t('app', "不能左移"));
        }else{
            $this->afMove();
            $parent = $owner::find()->where(['id' => $owner->pid])->one();
            $owner->pid = $parent->pid;
            $this->append();
            \Yii::$app->session->addFlash("success", \Yii::t('app', "左移成功"));
            $url = Url::to(['/'.\Yii::$app->controller->route, 'id' => $owner->id]);
            \Yii::$app->response->redirect($url)->send();
            exit;
        }
    }

    public function getCanRight()
    {
        return $this->owner->canUp;
    }

    public function sortRight()
    {
        $owner = $this->owner;
        if (!$owner->canRight){
            throw new ForbiddenHttpException(\Yii::t('app', "不能右移"));
        }else{
            $this->afMove();
            $up = $owner::find()->where(['pid' => $owner->pid])->andWhere(['<', 'sort', $owner->sort])->orderBy(['sort' => SORT_DESC])->one();
            $owner->pid = $up->id;
            $this->append();
            \Yii::$app->session->addFlash("success", \Yii::t('app', "右移成功"));
            $url = Url::to(['/'.\Yii::$app->controller->route, 'id' => $owner->id]);
            \Yii::$app->response->redirect($url)->send();
            exit;
        }
    }

    public function append($is_save = true)
    {
        $owner = $this->owner;
        $owner->sort = 0;
        $last = $owner::find()->where(['pid' => $owner->pid])->orderBy(['sort' => SORT_DESC])->one();
        if ($last){
            $owner->sort = $last->sort + 1;
        }
        if ($is_save)$owner->save();
    }

    public function afMove()
    {
        $owner = $this->owner;
        $models = $owner::find()->where(['pid' => $owner->pid])->andWhere(['>', 'sort', $owner->sort])->orderBy(['sort' => SORT_ASC])->all();
        foreach ($models as $k => $v){
            $v->sort --;
            $v->save();
        }
    }
}